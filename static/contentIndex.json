{"index":{"slug":"index","filePath":"index.md","title":"Welcome to my website for objective reality","links":["tastes/Bookshelf","tastes/MovieShelf","tastes/TVShelf","tastes/Tea-Notes"],"tags":["publish"],"content":"Finally the world has access to my curated tastes\nMedia\nüìñ Books  |  üé¨ Movies  |  üì∫ TV\n\nFood and Drink\nüçÉ Tea Reviews  |  üç≤ Vegan Recipes\nüì∞ VILF Blog  |  üå± Vegan Guide to SF  |  üóΩ Vegan Guide to NYC\n\nMusic\nChronological Bangers of the 20th century\n\nSongs that I‚Äôm about\n\nParty Bangers\n"},"tastes/Bookshelf":{"slug":"tastes/Bookshelf","filePath":"tastes/Bookshelf.md","title":"Bookshelf","links":[],"tags":["ongoing","publish"],"content":"const ratingMap = {\n  1: &quot;üëé&quot;,\n  2: &quot;ü§∑&quot;,\n  3: &quot;üëç&quot;,\n  4: &quot;‚≠ê&quot;\n};\n \n// Function to parse Obsidian date format like &quot;8 Sep 2025, Mon, 7:38pm&quot;\nfunction parseObsidianDate(dateStr) {\n  if (!dateStr) return null;\n  try {\n    // Extract the date part before the first comma\n    const datePart = dateStr.split(&#039;,&#039;)[0].trim();\n    // Parse &quot;8 Sep 2025&quot; format\n    return new Date(datePart);\n  } catch (e) {\n    return null;\n  }\n}\n \ndv.table([&quot;&quot;, &quot;Cover&quot;, &quot;Title&quot;, &quot;Author&quot;, &quot;Category&quot;],\n  dv.pages(&quot;#üìöBook&quot;)\n    .where(p =&gt; !p.file.path.includes(&quot;Templates&quot;))\n    .sort(p =&gt; {\n      const rating = p.rating;\n      const createdDate = parseObsidianDate(p.created) || new Date(p.file.ctime);\n      \n      // Create a composite sort key\n      // For rated books: use rating as primary, created date as secondary\n      // For unrated books: put them at the bottom\n      if (rating === null || rating === undefined) {\n        // Unrated books go to bottom, sorted by date asc (oldest first, newest last)\n        return [0, -createdDate.getTime()];\n      } else {\n        // Rated books: higher rating first, then newer date first\n        return [rating, createdDate.getTime()];\n      }\n    }, &#039;desc&#039;)\n    .map(p =&gt; [\n      ratingMap[p.rating] ?? &quot;&quot;,\n      p.cover ? `![|50](${p.cover})` : &quot;&quot;,\n      p.file.link,\n      p.author ?? &quot;&quot;,\n      p.categories ?? &quot;&quot;\n    ])\n);"},"tastes/MovieShelf":{"slug":"tastes/MovieShelf","filePath":"tastes/MovieShelf.md","title":"MovieShelf","links":[],"tags":["ongoing","publish"],"content":"const ratingMap = {\n  1: &quot;üëé&quot;,\n  2: &quot;ü§∑&quot;,\n  3: &quot;üëç&quot;,\n  4: &quot;‚≠ê&quot;\n};\n \n// Function to parse Obsidian date format like &quot;8 Sep 2025, Mon, 7:38pm&quot;\nfunction parseObsidianDate(dateStr) {\n  if (!dateStr) return null;\n  try {\n    // Extract the date part before the first comma\n    const datePart = dateStr.split(&#039;,&#039;)[0].trim();\n    // Parse &quot;8 Sep 2025&quot; format\n    return new Date(datePart);\n  } catch (e) {\n    return null;\n  }\n}\n \ndv.table([&quot;&quot;, &quot;Poster&quot;, &quot;Title&quot;, &quot;Director&quot;, &quot;Genre&quot;],\n  dv.pages(&quot;#üé•Movie&quot;)\n    .where(p =&gt; !p.file.path.includes(&quot;Templates&quot;))\n    .sort(p =&gt; {\n      const rating = p.rating;\n      const createdDate = parseObsidianDate(p.created) || new Date(p.file.ctime);\n      \n      // Create a composite sort key\n      // For rated movies: use rating as primary, created date as secondary\n      // For unrated movies: put them at the bottom\n      if (rating === null || rating === undefined) {\n        // Unrated movies go to bottom, sorted by date asc (oldest first, newest last)\n        return [0, -createdDate.getTime()];\n      } else {\n        // Rated movies: higher rating first, then newer date first\n        return [rating, createdDate.getTime()];\n      }\n    }, &#039;desc&#039;)\n    .map(p =&gt; [\n      ratingMap[p.rating] ?? &quot;&quot;,\n      p.image ? `![|50](${p.image})` : &quot;&quot;,\n      p.file.link,\n      p.director ?? &quot;&quot;,\n      p.categories ?? &quot;&quot;\n    ])\n);"},"tastes/TVShelf":{"slug":"tastes/TVShelf","filePath":"tastes/TVShelf.md","title":"TVShelf","links":[],"tags":["ongoing","publish"],"content":"const ratingMap = {\n  1: &quot;üëé&quot;,\n  2: &quot;ü§∑&quot;,\n  3: &quot;üëç&quot;,\n  4: &quot;‚≠ê&quot;\n};\n \n// Function to parse Obsidian date format like &quot;8 Sep 2025, Mon, 7:38pm&quot;\nfunction parseObsidianDate(dateStr) {\n  if (!dateStr) return null;\n  try {\n    // Extract the date part before the first comma\n    const datePart = dateStr.split(&#039;,&#039;)[0].trim();\n    // Parse &quot;8 Sep 2025&quot; format\n    return new Date(datePart);\n  } catch (e) {\n    return null;\n  }\n}\n \ndv.table([&quot;Rating&quot;, &quot;Poster&quot;, &quot;Title&quot;, &quot;Writer&quot;],\n  dv.pages(&quot;#üì∫TV&quot;)\n    .where(p =&gt; !p.file.path.includes(&quot;Templates&quot;))\n    .sort(p =&gt; {\n      const rating = p.rating;\n      const createdDate = parseObsidianDate(p.created) || new Date(p.file.ctime);\n      \n      // Create a composite sort key\n      // For rated shows: use rating as primary, created date as secondary\n      // For unrated shows: put them at the bottom\n      if (rating === null || rating === undefined) {\n        // Unrated shows go to bottom, sorted by date asc (oldest first, newest last)\n        return [0, -createdDate.getTime()];\n      } else {\n        // Rated shows: higher rating first, then newer date first\n        return [rating, createdDate.getTime()];\n      }\n    }, &#039;desc&#039;)\n    .map(p =&gt; [\n      ratingMap[p.rating] ?? &quot;&quot;,\n      p.image ? `![|50](${p.image})` : &quot;&quot;,\n      p.file.link,\n      p.writer ?? &quot;&quot;\n    ])\n);"},"tastes/Tea-Notes":{"slug":"tastes/Tea-Notes","filePath":"tastes/Tea Notes.md","title":"Tea Notes","links":[],"tags":["ongoing","publish"],"content":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnamedatere-buy?typecommentsbrew notessourceDry Berry Ruby Oolong2025-03-16YOolongmilky berry-y, yummydaughter‚Äôs teaJade Oolong Tea2025-03-16NOolongReally nice sweet smell, slightly sweet potato. But not interesting drinkguy on messengerJade Red Oolong Tea2025-03-16NOolongA little boringguy on messengerAnhua Tianjian 20152025-03-16YHeichaEarthy and brightwhite2teaBlood Moon 20242025-03-16NOolonga little boring, a little fruitywhite2teaCamphornought 2022 Mini2025-03-16YPuer - Ripewoody, smokey, boldwhite2teaMistle 20232025-03-16NBlackreally nice deep and bright, but not too much charactershorter brew timeswhite2teaImperial Dragon Well Tea From Zhejiang2025-03-16YGreenSomewhat acidic and no tannins. Very bright and vegetallook at instructions on websiteyunnan soucing13 Years Aged Da Hong Pao Rock Oolong Tea2025-03-16YOolongearthy, roasty, a little sweetneeds a little more leaf and high tempyunnan sourcingAnxi ‚ÄúHairy Crab‚Äù Mao Xie Fujian Oolong Tea2025-03-16NOolongvery green, not too interestingyunnan sourcingClassic Laoshan Green Tea from Shandong2025-03-16YGreendaily drinker, vegetal and a bit milkyyunnan sourcingCompetition Grade Jin Jun Mei Black Tea2025-03-16YBlackchocolatey smooth - delicious!yunnan sourcingFirst Flush ‚ÄúMao Feng‚Äù Yunnan Green Tea2025-03-16NGreena little boringyunnan sourcingGolden Horse 8685 Ripe Tea in Tangerine2025-03-16NPuer - Ripea little one note, but the tangerine smell is niceyunnan sourcingImperial Grade Silver Needle White Tea of Jinggu2025-03-16YWhiteVery floral and niceyunnan sourcingImperial Mojiang Golden Bud Yunnan Black Tea2025-03-16NBlackChocolate smell - unsure on tasteyunnan sourcingLumberslut 20222025-03-17YPuer - RipeForrest, musty, wood, mushroomwhite2teaPretty Girls 20222025-03-21YPuer - RipeMolassis, barnwhite2teaWaffles 20212025-03-22YPuer - RipeSweet, woody, portywhite2teaGingerbread Man 20222025-03-26NPuer - RipePuery, but a little uninterestingwhite2teaFloral Honey Ruby Oolong2025-03-28YOolongBright, honey, warm milkdaughter‚Äôs teaLa Sombra 20232025-03-30NPuer - Rawkinda green, boringwhite2teaLapsun 20232025-04-05NSmokedA little smoky, a little black, nothing crazywhite2teaSun Fu 20182025-04-06NHeichaKinda moldy funky not so pleasant. Wet log in a not so good waywhite2teaRectrix 20222025-04-18NBlacka little sweet and delicious, but not enoughwhite2teaOrganic Nonpareil Ming Qian Dragon Well 20252025-04-19NGreenchestnut, umami, a little sweetteavivreInjured Coast 20222025-05-07NPuer - RawA little roasty. Just tastes like astringent black teawhite2teaReading Room 20232025-05-30YPuer - RipeSweet, syruppy, refined. A bit expensivewhite2teaShotgun Shack 20242025-06-07NPuer - RipeA little boring and just astringentwhite2teaCacao 80 20242025-06-15YPuer - RipeCrazy bitterneeds experimentation. half a coin regular/cold brew. mix with milk/sugar into hot chocolatewhite2teaBellwether 20242025-06-20YPuer - Rawgentle, light, full. kinda lovely. Not remarkable for the price but very nicewhite2teaDitch Pike 20242025-06-22YBlackreally beutiful. sweet, herby, low bitterness, rich. yummaybe get it as daily driverwhite2teaBig O V3 20232025-07-03NPuer - RipeKinda just boringwhite2teaTheophilus 20242025-07-23NPuer - RipeNot super interestingwhite2teaEn Passant 20232025-07-27NPuer - RipeJust bitter, not too interestingwhite2teaMoon Bear 20242025-08-05YPuer - RawSmells like white/green/raw, but a rich molassis caramel peanut brittle mixed with roast grain flavor. A little subtle but nice.white2teaSmokeshou 20212025-08-06YSmokedReally sweet delicious campfire smoke flavor, like smoked salmon, no bitterness or astringency or ashtray.white2teaKarst 20232025-08-07YWhiteFruity, smooth, sweet, floral, delicious. A little on the subtler end but still goodDefinitely could daily drive. Cold brew?white2teaAgeless Phase 20242025-08-08NPuer - RipeBoringwhite2teaGongmei 20192025-08-10NWhiteVery smooth and soothing, fruity notes wihtout being sweet. But not blown awayDualist 20242025-08-15NBlackOk but bit boring black teawhite2teaFruity Citrus Ruby Oolong2025-08-16NOolongSmooth, sweet, fruity, but not as delightful as their other stuff. I might get it if I was doing another order from themdaughter‚Äôs teaJin Xuan Milk Oolong2025-08-17NOolongMeant to be a milk oolong but it‚Äôs way too subtle. Just an ok oolongteavivreSmoky Charcoal Ruby Oolong2025-08-21YOolongNot super smoky or charcoaly. A little sour and chocolate notes. Maybe refreshing for a cold brew? Xander likes itdaughter‚Äôs teaDrills and Jeans 20252025-08-23NWhiteNice, a little too subtle. slightly roasty marshmellow or hot chocolatewhite2teaSnowflake Dancong2025-08-28NOolongKinda boriingwhite2teaJade Yellow Tea2025-08-29NYellowVery midNeed to respect it and do it at 85Cguy on messengerAnhua Tianjian 20212025-09-01NHeichaA little funky and interesting, but didn‚Äôt love itwhite2teaNuo Xiang Shu 20032025-09-02YPuer - RipeSuper old and syrupy. Not my faavorite but nice to have around.white2teaSchedule White 20242025-09-05YWhiteSweet, fruity, herby, a lot going on. Great aftertaste. Serious stuff for the $7 pricewhite2teaDian Hong Black Tea - Golden Tip2025-09-09YBlackGreat black tea. herby, good acidity\n\nold.reddit.com/r/tea/comments/1h5t1m7/what_teas_have_you_purchased_in_the_last_week/\nteadb.org/white2tea/\nold.reddit.com/r/puer/comments/1hgaeqw/you_have_120_which_white2tea_shengs_are_you_buying/\nwhite2tea.com/pages/white2tea-tea-club-faq\nold.reddit.com/r/tea/comments/q84dgs/white_tea_recommendations/\nold.reddit.com/r/tea/comments/18ey0dj/recommendations_for_online_vendors_of_chinese_tea/\nold.reddit.com/r/tea/comments/sa9nue/white_teas_wanted/\nRemaining White2tea\nRipe Pu‚Äôer (Shou)\n\nAgeless Phase 2024\nCaledonia 2024\nLumber 2023\nLumber 2024\nPredawn Dark 2023 (charcoal-roasted)\nPretty Girls 2021\nRed Loon 2023\nNuo Xiang Shu 2003\nTale Chaser 2022 (drinks like aged shou)\n\nRaw Pu‚Äôer (Sheng)\n\nBiscuits 2024\nDualist 2022\nFirebat 2023 (smoked sheng)\nHypnotrain 2022\nOrientalism and the Generated Image 2024\nTihkal 2024\n\nWhite Tea\n(includes charcoal-roasted &amp; moonlight styles)\n\nCharing Cross 2024 (charcoal-roasted)\nDark Peony 2024 (‚Äúdark‚Äù oxidised white)\nDrills and Jeans 2025 (charcoal-roasted)\nJonia 2025 (charcoal-roasted)\nSilver Fox 2024\nTiltshift 2024 (moonlight / shade-dried)\nGongmei 2019\n\nBlack Tea\n\nScrye 2022\nSunskate 2021 (lightly oxidised, borderline oolong)\n\nHeicha / Dark Tea (non-Pu‚Äôer)\n\nAnhua Tianjian 2021\n\nWhite2Tea Purchases\n\nAgeless Phase 2024\nAnhua Tianjian 2015\nAnhua Tianjian 2021\nBellwether 2024\nBig O V3 2023\nBiscuits 2024\nBlood Moon 2024\nCacao 80 2024\nCaledonia 2024\nCamphornought 2022\nCharing Cross 2024\nDark Peony 2024\nDitch Pike 2024\nDrills and Jeans 2025\nDualist 2022\nDualist 2024\nEn Passant 2023\nFirebat 2023\nGingerbread Man 2022\nGongmei 2019\nHypnotrain 2022\nInjured Coast 2022\nJonia 2025\nKarst 2023\nLa Sombra 2023\nLapsun 2023\nLumber 2022\nLumber 2023\nLumber 2024\nMistle 2023\nMoon Bear 2024\nNuo Xiang Shu 2003\nOrientalism and the Generated Image 2024\nPredawn Dark 2023\nPretty Girls 2021\nPretty Girls 2022\nReading Room 2023\nRectrix 2022\nRed Loon 2023\nSchedule White 2024\nScrye 2022\nShotgun Shack 2024\nSilver Fox 2024\nSmokeshou 2021\nSnowflake Dancong (no year)\nSun Fu 2018\nSunskate 2021\nTale Chaser 2022\nTheophilus 2024\nTihkal 2024\nTiltshift 2024\nWaffles 2021\n"}}